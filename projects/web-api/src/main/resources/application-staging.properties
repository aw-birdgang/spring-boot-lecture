# Web API 스테이징 환경 설정
server.port=9082
server.servlet.context-path=/staging
spring.application.name=web-api

# 로깅 설정
logging.level.org.springdoc=INFO
logging.level.birdgang.spring.lecture.web=INFO
logging.level.org.springframework.security=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.file.name=logs/web-api-staging.log
logging.file.max-size=10MB
logging.file.max-history=30

# H2 데이터베이스 설정 (스테이징용 - 파일 기반)
spring.datasource.url=jdbc:h2:file:./data/staging/web-db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;AUTO_SERVER=TRUE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA 설정
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Redis 설정 (스테이징용)
spring.redis.host=${REDIS_HOST:localhost}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.database=0
spring.redis.password=${REDIS_PASSWORD:}

# Thymeleaf 설정
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# Security 설정 (스테이징용)
spring.security.user.name=${ADMIN_USERNAME:staging-admin}
spring.security.user.password=${ADMIN_PASSWORD:staging123}

# Actuator 설정 (스테이징용)
management.endpoints.web.exposure.include=health,info,metrics,env
management.endpoint.health.show-details=when-authorized
management.metrics.export.prometheus.enabled=true

# Swagger 설정 (스테이징용)
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs

# 캐시 설정 (스테이징용)
spring.cache.type=redis
spring.cache.redis.time-to-live=300000
spring.cache.redis.cache-null-values=false
spring.cache.redis.key-prefix=staging:

# 세션 설정 (스테이징용)
spring.session.store-type=redis
spring.session.redis.namespace=spring:session:staging
spring.session.timeout=1800s
